Dans l'ensemble, OK. Bravo ! Quelques remarques quand même.

Fond du projet
==============
- Pb le plus important : petite erreur sur la forme de la fonction générée. Il
faut généraliser un peu. Normalement,
  - les inputs :
    - le bn,
    - la liste des targets,
    - la liste des évidences (on pourrait spécialiser en liste des hard et des
    softs evidence)
    - (+ le nom du fichier, le nom de la fonction, etc.)

  - l'output : une fonction dont l'appel sera
    getValue("valeur des evidences") et qui renvoie "valeur des targets".
(EN PARTICULIER : le bn ne doit plus être passé en argument !)


- Utiliser le fichier de configuration que je vous ai proposé (je le remets dans le github)

Forme du code
=============
- commenter !

- angliciser le code et les commentaires (pas grave si anglais télégraphique)
    createPotentiel --> createPotential

- class Compilation -> class Compiler

- Il y aura possible une hiérarchie de Compiler => il faut intégrer
metacode_compilation directement dans Compiler.py



Forme du code généré
====================
- supprimer affichage_resultats(bn) dans le code généré ou alors en commentaire.
Genre "# howToUse the function".

- de même, rajouter des commentaires en début de code généré (date de génération,
"This code is generated so please, do not change", compilateur et générateur utilisés, etc.)
